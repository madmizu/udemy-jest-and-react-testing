{"ast":null,"code":"var _jsxFileName = \"/Users/madi.shimizu/practice/color-button/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function replaceCamelWithSpaces(colorName) {\n  return colorName.replace(/\\B([A-Z])\\B/g, ' $1');\n}\n\nfunction App() {\n  _s();\n\n  const [buttonColor, setButtonColor] = useState('MediumVioletRed');\n  const [disabled, setDisabled] = useState(false);\n  const newButtonColor = buttonColor === 'MediumVioletRed' ? 'MidnightBlue' : 'MediumVioletRed';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: disabled ? 'gray' : buttonColor\n      },\n      onClick: () => setButtonColor(newButtonColor),\n      disabled: disabled,\n      children: [\"Change to \", replaceCamelWithSpaces(newButtonColor)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"disable-button-checkbox\",\n      defaultChecked: disabled,\n      \"aria-checked\": disabled,\n      onChange: e => setDisabled(e.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"disable-button-checkbox\",\n      children: \"Disable button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wJM1ZGhksMAIqCmwxi694m5xzPg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","replaceCamelWithSpaces","colorName","replace","App","buttonColor","setButtonColor","disabled","setDisabled","newButtonColor","backgroundColor","e","target","checked"],"sources":["/Users/madi.shimizu/practice/color-button/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nexport function replaceCamelWithSpaces(colorName){\n  return colorName.replace(/\\B([A-Z])\\B/g, ' $1');\n}\n\nfunction App() {\n  const [buttonColor, setButtonColor] = useState('MediumVioletRed');\n  const [disabled, setDisabled] = useState(false);\n\n  const newButtonColor = buttonColor === 'MediumVioletRed' ? 'MidnightBlue' : 'MediumVioletRed';\n\n  return (\n    <div>\n      <button\n        style={({ backgroundColor: disabled ? 'gray' : buttonColor })}\n        onClick={() => setButtonColor(newButtonColor)}\n        disabled={disabled}\n      >\n        Change to {replaceCamelWithSpaces(newButtonColor)}\n      </button>\n      <input\n        type=\"checkbox\"\n        id=\"disable-button-checkbox\"\n        defaultChecked={disabled}\n        aria-checked={disabled}\n        onChange={(e) => setDisabled(e.target.checked)} />\n      <label htmlFor=\"disable-button-checkbox\">Disable button</label>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;AAEA,OAAO,SAASC,sBAAT,CAAgCC,SAAhC,EAA0C;EAC/C,OAAOA,SAAS,CAACC,OAAV,CAAkB,cAAlB,EAAkC,KAAlC,CAAP;AACD;;AAED,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,iBAAD,CAA9C;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;EAEA,MAAMS,cAAc,GAAGJ,WAAW,KAAK,iBAAhB,GAAoC,cAApC,GAAqD,iBAA5E;EAEA,oBACE;IAAA,wBACE;MACE,KAAK,EAAG;QAAEK,eAAe,EAAEH,QAAQ,GAAG,MAAH,GAAYF;MAAvC,CADV;MAEE,OAAO,EAAE,MAAMC,cAAc,CAACG,cAAD,CAF/B;MAGE,QAAQ,EAAEF,QAHZ;MAAA,yBAKaN,sBAAsB,CAACQ,cAAD,CALnC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,IAAI,EAAC,UADP;MAEE,EAAE,EAAC,yBAFL;MAGE,cAAc,EAAEF,QAHlB;MAIE,gBAAcA,QAJhB;MAKE,QAAQ,EAAGI,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,OAAV;IAL9B;MAAA;MAAA;MAAA;IAAA,QARF,eAcE;MAAO,OAAO,EAAC,yBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GAxBQT,G;;KAAAA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}